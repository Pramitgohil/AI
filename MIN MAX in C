//Code in C 
//MIN MAX ALGO


#include <stdio.h>
#include <limits.h>

// Minimax function to find the optimal value
int minimax(int depth, int nodeIndex, int isMax, int scores[], int h) {
    // If we have reached the leaf node, return the score
    if (depth == h) {
        return scores[nodeIndex];
    }

    if (isMax) {
        int best = INT_MIN;  // Maximizing player

        // Recur for left and right children
        for (int i = 0; i < 2; i++) {
            int value = minimax(depth + 1, nodeIndex * 2 + i, 0, scores, h);
            best = (value > best) ? value : best;
        }
        return best;
    } else {
        int best = INT_MAX;  // Minimizing player

        // Recur for left and right children
        for (int i = 0; i < 2; i++) {
            int value = minimax(depth + 1, nodeIndex * 2 + i, 1, scores, h);
            best = (value < best) ? value : best;
        }
        return best;
    }
}

int main() {
    // Leaf node scores
    int scores[] = {3, 5, 6, 9};
    int h = 2;  // Height of the tree (root at depth 0, two levels below)

    // The root is at depth 0, index 0, and it's Maximizer's turn
    int optimalValue = minimax(0, 0, 1, scores, h);
    printf("The optimal value is: %d\n", optimalValue);

    return 0;
}
